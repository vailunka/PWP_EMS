openapi: 3.0.3
info:
  title: Event Management API
  description: "An API for managing users, events and relationships between users\
    \ and events."
  version: 1.0.0
servers:
- url: http://localhost:5000/api
paths:
  /users/:
    get:
      tags:
      - UserCollection
      summary: List all users
      operationId: users_get
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.user_collection_controller
    post:
      tags:
      - UserCollection
      summary: Create a new user
      operationId: users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "201":
          description: User Created
        "400":
          description: Bad Request
        "415":
          description: Unsupported Media Type
      x-openapi-router-controller: swagger_server.controllers.user_collection_controller
  /users/{user}/:
    get:
      tags:
      - UserItem
      summary: Get a user by name
      operationId: users_user_get
      parameters:
      - name: user
        in: path
        description: Username as path parameter
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A User Object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User Not Found
      x-openapi-router-controller: swagger_server.controllers.user_item_controller
    put:
      tags:
      - UserItem
      summary: Update a user
      operationId: users_user_put
      parameters:
      - name: user
        in: path
        description: Username as path parameter
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "201":
          description: User updated
        "400":
          description: Bad Request
        "404":
          description: Invalid URL
        "415":
          description: Wrong Content-Type
      x-openapi-router-controller: swagger_server.controllers.user_item_controller
    delete:
      tags:
      - UserItem
      summary: Delete a user
      operationId: users_user_delete
      parameters:
      - name: user
        in: path
        description: Username as path parameter
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: User deleted
        "404":
          description: User Not Found
      x-openapi-router-controller: swagger_server.controllers.user_item_controller
  /users/{user}/events/:
    get:
      tags:
      - UserEvents
      summary: Get all events a user organized or attended
      operationId: users_user_events_get
      parameters:
      - name: user
        in: path
        description: Username as path parameter
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of user events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
      x-openapi-router-controller: swagger_server.controllers.user_events_controller
  /events/:
    get:
      tags:
      - EventCollection
      summary: List all events
      operationId: events_get
      responses:
        "200":
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.event_collection_controller
    post:
      tags:
      - EventCollection
      summary: Create a new event
      operationId: events_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
        required: true
      responses:
        "201":
          description: Event created
      x-openapi-router-controller: swagger_server.controllers.event_collection_controller
  /events/{event}/:
    get:
      tags:
      - EventItem
      summary: Get an event by name
      operationId: events_event_get
      parameters:
      - name: event
        in: path
        description: Event name as path parameter
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: An event object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
      x-openapi-router-controller: swagger_server.controllers.event_item_controller
    put:
      tags:
      - EventItem
      summary: Update an event
      operationId: events_event_put
      parameters:
      - name: event
        in: path
        description: Event name as path parameter
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
        required: true
      responses:
        "200":
          description: Event updated
      x-openapi-router-controller: swagger_server.controllers.event_item_controller
    delete:
      tags:
      - EventItem
      summary: Delete an event
      operationId: events_event_delete
      parameters:
      - name: event
        in: path
        description: Event name as path parameter
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Event deleted
      x-openapi-router-controller: swagger_server.controllers.event_item_controller
components:
  schemas:
    User:
      required:
      - email
      - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
      example:
        name: name
        phone_number: phone_number
        email: email
    Event:
      required:
      - location
      - name
      - organizer
      - time
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        time:
          type: string
          format: date-time
        organizer:
          type: integer
        description:
          type: string
        category:
          type: object
        tags:
          type: array
          items:
            type: string
      example:
        organizer: 0
        name: name
        description: description
        location: location
        time: 2000-01-23T04:56:07.000+00:00
        category: {}
        tags:
        - tags
        - tags
    inline_response_200:
      type: object
      properties:
        user_name:
          type: string
        event_infos:
          $ref: "#/components/schemas/inline_response_200_event_infos"
      example:
        event_infos:
          organized_events:
          - null
          - null
          attended_events:
          - organizer: 0
            name: name
            description: description
            location: location
            time: 2000-01-23T04:56:07.000+00:00
            category: {}
            tags:
            - tags
            - tags
          - organizer: 0
            name: name
            description: description
            location: location
            time: 2000-01-23T04:56:07.000+00:00
            category: {}
            tags:
            - tags
            - tags
        user_name: user_name
    inline_response_200_event_infos:
      type: object
      properties:
        attended_events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        organized_events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
      example:
        organized_events:
        - null
        - null
        attended_events:
        - organizer: 0
          name: name
          description: description
          location: location
          time: 2000-01-23T04:56:07.000+00:00
          category: {}
          tags:
          - tags
          - tags
        - organizer: 0
          name: name
          description: description
          location: location
          time: 2000-01-23T04:56:07.000+00:00
          category: {}
          tags:
          - tags
          - tags
  parameters:
    UserParam:
      name: user
      in: path
      description: Username as path parameter
      required: true
      style: simple
      explode: false
      schema:
        type: string
    EventParam:
      name: event
      in: path
      description: Event name as path parameter
      required: true
      style: simple
      explode: false
      schema:
        type: string

